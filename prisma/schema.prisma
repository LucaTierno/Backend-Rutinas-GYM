
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CategoryPlan {
  id          String           @id @default(uuid())
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  name        String           @unique

  users       UserCategoryPlan[] 
}

model Exercise {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  name          String        @unique
  image         String?
  muscleGroups  MuscleGroup[]

  //? Relaciones 
  routineExercises RoutineExercises[]
}

model Routine {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  
  day           Day

  //? Relaciones
  routineExercises  RoutineExercises[]
  
  userId        String
  user          User      @relation(fields: [userId], references: [id])
} 

model RoutineExercises {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  sets          Int?
  reps          Int?
  time          Float?
  comment       String?

  //? Relaciones
  exerciseId     String
  exercise      Exercise     @relation(fields: [exerciseId], references: [id])
  
  routineId     String
  routine       Routine      @relation(fields: [routineId], references: [id])
}

model User {
  id              String        @id @default(uuid())
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  name            String
  age             Float
  email           String        @unique
  password        String
  phone           Float
  phoneEmergency  Float
  address         String
  role            Role         @default(CLIENT)

  //? Relaciones
  routines  Routine[]
  categoryPlans UserCategoryPlan[] 
}

model UserCategoryPlan {
  id            String        @id @default(uuid())
  userId        String
  categoryPlanId String
  assignedAt    DateTime      @default(now())

  user          User          @relation(fields: [userId], references: [id] ,onDelete: Cascade )
  categoryPlan  CategoryPlan  @relation(fields: [categoryPlanId], references: [id], onDelete: Cascade)

  @@unique([userId, categoryPlanId])
}

//? ENUMS:

enum MuscleGroup {
  pecho
  espalda
  hombros
  biceps
  triceps
  cuadriceps
  isquiotibiales
  gluteos
  pantorrillas
  abdominales
  trapecio
  antebrazos
  oblicuos
}

enum Day {
  lunes
  martes
  miercoles
  jueves
  viernes
  sabado
  domingo
}

enum Role {
  ADMIN
  COACH
  CLIENT
}